# *Сделайте* mapper и reducer, чтобы посчитать среднее и дисперсию оценок за фильм.
# Реализация через цикл (предпогаем, что мы не знаем сколько у нас фильмов):
import json


n, mean, M2 = 0, 0.0, 0
for path in Path('imdb-user-reviews').glob('**/*'):
    if path.is_file() and path.suffix == '.json':
        with open(path, 'r') as f:
            info = json.load(f)
        score = float(info['movieIMDbRating'])
        n += 1
        delta = score - mean
        mean += delta / n
        M2 += delta * (score - mean)

print(mean, (M2 / n) ** (1/2))


#На основе этого кода соберите mapper и reducer:

def mapper(path):
  if path.is_file() and path.suffix == '.json':
    with open(path, 'r') as f:
      info = json.load(f)
      score = float(info['movieIMDbRating'])
      return (score)


def reducer(acc, score):
    global n, mean, M2
    if type(score) == float:
        n += 1
        delta = score - mean
        mean += delta / n
        M2 += delta * (score - mean)
        return n, mean, M2
    else:
        return accumulated

%%time
n, mean, M2 = 0, 0.0, 0
n, mean, M2 = reduce(reducer, map(mapper, Path('imdb-user-reviews').glob('**/*')))
print(mean, (M2 / n) ** (1/2))
